name: 'Koko CloudRun Deployment'
description: 'Deployment script for building, testing and deploying to GCP CloudRun'
inputs:
  name:
    description: 'Service name'
    required: true
  registry:
    description: 'Registry url'
    required: true
  region:
    description: 'GCP Region'
    required: true
  gcp_key:
    description: 'GCP Key'
    required: true
  depot_token:
    description: 'Depot Token'
    require: true
runs:
  using: "composite"
  steps:
    # Setup gcloud CLI
    - name: 'GCP Auth'
      uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: '${{ inputs.gcp_key }}'

    - name: 'Configure GCP Docker'
      run: |
        gcloud auth configure-docker us-west1-docker.pkg.dev
      shell: bash

    - name: Github Short Ref
      id: github-sha
      shell: bash
      run: echo "::set-output name=short::$(git rev-parse --short HEAD)"

    - uses: depot/use-action@v1
      with:
        token: ${{ inputs.depot_token }}

    - name: Build
      uses: docker/build-push-action@v4
      with:
        context: .
        push: false
        tags: sut
        load: true
        build-args: GIT_REF=${{ steps.github-sha.outputs.short }}

    - name: Test
      if: hashFiles('docker-compose.test.yml') != ''
      shell: bash
      run: |
        docker compose -f docker-compose.test.yml up --abort-on-container-exit

    - name: Publish
      shell: bash
      run: |
        docker tag sut ${{ inputs.registry }}/${{ inputs.name }}:${{ steps.github-sha.outputs.short }}
        docker push ${{ inputs.registry }}/${{ inputs.name }}:${{ steps.github-sha.outputs.short }}
        docker tag sut ${{ inputs.registry }}/${{ inputs.name }}:dev
        docker push ${{ inputs.registry }}/${{ inputs.name }}:dev

    - name: Publish production
      if: github.ref == 'refs/heads/main'
      shell: bash
      run: |
        docker tag ${{ inputs.registry }}/${{ inputs.name }}:${{ steps.github-sha.outputs.short }} ${{ inputs.registry }}/${{ inputs.name }}:prod
        docker push ${{ inputs.registry }}/${{ inputs.name }}:prod

    - name: Update image in service
      shell: bash
      run: |
        cat deploy/service-dev.yml | sed 's/IMAGE_TAG/${{ steps.github-sha.outputs.short }}/g' > /tmp/service-dev.yml
        cat deploy/service.yml | sed 's/IMAGE_TAG/${{ steps.github-sha.outputs.short }}/g' > /tmp/service.yml

    - name: Deploy to production
      if: github.ref == 'refs/heads/main'
      uses: 'google-github-actions/deploy-cloudrun@v0'
      with:
        region: '${{ inputs.region }}'
        metadata: '/tmp/service.yml'

    - name: Deploy to development
      uses: 'google-github-actions/deploy-cloudrun@v0'
      with:
        region: '${{ inputs.region }}'
        metadata: '/tmp/service-dev.yml'
